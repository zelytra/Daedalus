buildscript {
    repositories {
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
    }
    dependencies {
        classpath("com.diffplug.spotless:spotless-plugin-gradle:7.0.0.BETA2")
    }
}

plugins {
    id 'java'
    id("com.diffplug.spotless") version "7.0.0.BETA2"
}

group = 'fr.zelytra'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url = uri("https://repo.papermc.io/repository/maven-public/") }
    maven { url = uri("https://maven.enginehub.org/repo/") }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.1-R0.1-SNAPSHOT")
    implementation(platform("com.intellectualsites.bom:bom-newest:1.49")) // Ref: https://github.com/IntellectualSites/bom
    compileOnly("com.fastasyncworldedit:FastAsyncWorldEdit-Core")
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    implementation 'com.sk89q.worldedit:worldedit-bukkit:7.2.12' // or latest version
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'io.papermc.paper:paper-api:1.21.0-R0.1-SNAPSHOT' // Replace with your Minecraft version
    implementation 'com.mojang:authlib:1.5.21' // Authlib dependency for GameProfile
}

spotless {
    java {
        target 'src/main/java/**/*.java', 'src/test/java/**/*.java'
        importOrder()
        removeUnusedImports()
        cleanthat()
        trimTrailingWhitespace()
        formatAnnotations()
        eclipse()
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}